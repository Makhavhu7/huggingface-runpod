# Base: Matches your old layers (Ubuntu 18.04 + CUDA 11.8 for PyTorch 2.0)
ARG RELEASE
ARG LAUNCHPAD_BUILD_ARCH
FROM nvidia/cuda:11.8.0-devel-ubuntu18.04

LABEL org.opencontainers.image.ref.name=ubuntu
LABEL org.opencontainers.image.version=18.04

# Install min deps (matches your old ADD file)
COPY sources.list /etc/apt/sources.list
CMD ["/bin/bash"]  # Temporary CMD, will be overridden later

# PyTorch/CUDA args (matches your old)
ARG PYTORCH_VERSION
ARG TRITON_VERSION
ARG TARGETPLATFORM
ARG CUDA_VERSION=11.8.0

LABEL com.nvidia.volumes.needed="nvidia_driver"

# Install PyTorch and Conda
RUN apt-get update && apt-get install -y wget && \
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda && \
    rm Miniconda3-latest-Linux-x86_64.sh && \
    apt-get clean && \
    PYTORCH_VERSION=v2.0.0 TRITON_VERSION= TARGETPLATFORM=linux/amd64 \
    /opt/conda/bin/conda install pytorch==2.0.0 torchvision==0.15.0 torchaudio==2.0.0 pytorch-cuda=11.8 -c pytorch -c nvidia -y

# Post-PyTorch RUN layers (symlink/fix libs)
RUN PYTORCH_VERSION=v2.0.0 TRITON_VERSION= TARGETPLATFORM=linux/amd64 ln -s /usr/local/cuda-11.8 /usr/local/cuda
RUN PYTORCH_VERSION=v2.0.0 TRITON_VERSION= TARGETPLATFORM=linux/amd64 ldconfig /usr/local/cuda/lib64

# Envs
ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64
ENV PYTORCH_VERSION=v2.0.0

WORKDIR /workspace
WORKDIR /app

# Copy app files
COPY requirements.image.txt .
COPY app/ app/
COPY main.image.py main.py

# Apt update + pip install
RUN apt-get update && apt-get install -y git libsndfile1 ffmpeg && \
    pip install --no-cache-dir -r requirements.image.txt

# Purge cache
RUN apt-get purge -y wget && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*

# Runtime envs
ENV PYTHONUNBUFFERED=1 \
    CUDA_DEVICE_ORDER=PCI_BUS_ID \
    HUGGINGFACE_HUB_CACHE=/dev/shm/hf_cache \
    TRANSFORMERS_CACHE=/dev/shm/transformers_cache

# Create non-root user
RUN useradd -m appuser
USER appuser

# Final CMD to run the app
CMD ["python", "-u", "main.py"]